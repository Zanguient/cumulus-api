service: cumulus-workflow-engine # NOTE: update this with your service name

provider:
  name: aws
  apiKeys:
    - cumulus-admin
  runtime: nodejs4.3
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
        - "datapipeline:*"
        - "dynamodb:*"
        - "iam:PassRole"
      Resource:
        - "*"

functions:

  # stats summary
  statsSummary:
    handler: handler.statsSummary
    timeout: 300
    events:
      - http:
          path: stats/summary
          method: get
          private: true
          cors: true

  # stats summary grouped
  statsSummaryGrouped:
    handler: handler.statsSummaryGrouped
    timeout: 300
    events:
      - http:
          path: stats/summary/grouped
          method: get
          private: true
          cors: true

  # get error stats
  getErrorCounts:
    handler: handler.getErrorCounts
    timeout: 300
    events:
      - http:
          path: stats/errors
          method: get
          private: true
          cors: true

  # get list of errors
  listErrors:
    handler: handler.listErrors
    timeout: 300
    events:
      - http:
          path: errors
          method: get
          private: true
          cors: true

  # list all granules
  listGranules:
    handler: handler.listGranules
    timeout: 300
    events:
      - http:
          path: granules/{dataSet}
          method: get
          private: true

  getGranules:
    handler: handler.getGranules
    timeout: 300
    events:
      - http:
          path: granules/{dataSet}/{granuleName}
          method: get
          private: true

  # list all dataset records
  listDataSet:
    handler: handler.listDataSets
    timeout: 300
    events:
      - http:
          path: datasets
          method: get
          private: true

  # get a particular dataset
  getDataSet:
    handler: handler.getDataSet
    timeout: 300
    events:
      - http:
          path: datasets/{short_name}
          method: get
          private: true

  # post a new dataSet record
  postDataSet:
    handler: handler.postDataSet
    timeout: 300
    events:
      - http:
          path: datasets
          method: post
          private: true

  getErrorCounts:
    handler: handler.getErrorCounts
    timeout: 300
    events:
      - http:
        path: errors/counts
        method: get
        private: true

  listErrors:
    handler: handler.listErrors
    timeout: 300
    events:
      - http:
        path: errors/list/{dataSet}
        method: get
        private: true

  # trigger lambda
  trigger:
    handler: handler.trigger
