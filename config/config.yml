stackName: cumulus-api-lpdaac
stage: dev

vpc:
  id: vpc-5aa75d3c
  availabilityZones: us-east-1e
  subnetId: subnet-41e23a7d

buckets:
  private: cumulus-private
  public: cumulus-public
  protected: cumulus-protected
  internal: cumulus-internal

ecs:
  maxInstances: 5
  desiredInstances: 0
  keyPairName: cumulus-scisco
  instanceType: m4.large

# processing docker images
images:
  - name: asterProcessing
    image: cumulus-docker-dev-aster
    cpu: 25
    memory: 400

elasticsearch:
  # the dynamic template that is included with every type
  # used with the bootstrap command
  dynamic_templates:
    - all_date_fileds:
        match_mapping_type: long
        match: '*At'
        mapping:
          type: date
  relations:
    - CollectionsTable
    - PDRsTable

sqs:
  - name: PDRsQueue # queue for list of PDRs to be parsed
    visibilityTimeout: 100
    retry: 3
  - name: GranulesQueue # queue for Granule files to be ingested
    visibilityTimeout: 1000
    retry: 3
  - name: ProcessingQueue # queue for running process ECS tasks
    visibilityTimeout: 5000
    retry: 2

dynamos:
  - name: CollectionsTable
    read: 5
    write: 5
    envName: CollectionsTable
    elasticsearch: true
    attributes:
      - name: collectionName
        type: S
    schema:
      - name: collectionName
        type: HASH

  - name: GranulesTable
    read: 300
    write: 300
    envName: GranulesTable
    elasticsearch: true
    attributes:
      - name: granuleId
        type: S
    schema:
      - name: granuleId
        type: HASH

  - name: PDRsTable
    read: 100
    write: 100
    envName: PDRsTable
    elasticsearch: true
    attributes:
      - name: pdrName
        type: S
    schema:
      - name: pdrName
        type: HASH

  - name: DistributionTable
    read: 1
    write: 20
    envName: DistributionTable
    elasticsearch: true
    attributes:
      - name: userName
        type: S
      - name: accessDate
        type: N
    schema:
      - name: userName
        type: HASH
      - name: accessDate
        type: RANGE

  - name: ErrorsTable
    read: 1
    write: 30
    envName: ErrorsTable
    elasticsearch: true
    attributes:
      - name: objName
        type: S
    schema:
      - name: objName
        type: HASH

# difining the APIs. Each item will include a separate endpoint
apis:
  - name: distribution
  - name: backend

lambdas:
  - name: es
    handler: es.handler
    timeout: 300

  - name: ingest
    handler: ingest.handler
    timeout: 300
    services:
      - name: parsePdrs
        #handler: ingest.parsePdrHandler
        count: 0 # number of service instances running on ECS for this lambda
        image: cumulus-docker-dev-lambdarunner
      - name: ingestGranules
        #handler:
        count: 0
        memory: 512
        cpu: 10
        commands:
          - --eventJson
          - '{ \"concurrency\": 4 }'

  - name: runner
    handler: runner.handler
    timeout: 300
    services:
      - name: runner
        #handler: runner.handler
        image: cumulus-docker-dev-lambdarunner
        count: 0
        memory: 256
        cpu: 10
        broadcast: true

  - name: archive
    handler: archive.handler
    timeout: 300
    broadcast: true

  - name: dispatcher
    handler: dispatcher.handler
    timeout: 300
    broadcast: true

  - name: cmr
    handler: cmr.handler
    timeout: 300
    broadcast: true

  - name: distribution
    handler: distribution.handler
    timeout: 300
    apiGateway:
      - api: distribution
        path: '{granuleId}'
        method: get

  - name: stats
    handler: stats.handler
    timeout: 300
    apiGateway:
      - path: stats/summary
        method: get
        cors: true
        api: backend
      - path: stats/summary/grouped
        method: get
        cors: true
        api: backend

  - name: logs
    handler: logs.handler
    timeout: 300
    apiGateway:
      - path: stats/logs
        method: get
        cors: true
        api: backend
      - path: logs
        method: get
        cors: true
        api: backend

  - name: granules
    handler: granules.handler
    timeout: 300
    apiGateway:
      - path: granules
        method: get
        cors: true
        api: backend
      - path: granules/{granuleName}
        method: get
        cors: true
        api: backend
      - path: granules/{granuleName}
        method: put
        cors: true
        api: backend

  - name: collections
    handler: collections.handler
    timeout: 300
    apiGateway:
      - path: collections
        method: get
        cors: true
        api: backend
      - path: collections/{short_name}
        method: get
        cors: true
        api: backend
      - path: collections
        method: post
        cors: true
        api: backend
      - path: collections/{short_name}
        method: put
        cors: true
        api: backend

  - name: pdrs
    handler: pdrs.handler
    timeout: 300
    apiGateway:
      - path: pdrs
        method: get
        cors: true
        api: backend
      - path: pdrs/{pdrName}
        method: get
        cors: true
        api: backend
